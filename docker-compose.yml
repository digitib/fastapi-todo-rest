version: "3.8"

services:
  api:
    container_name: todo_api
    build:
      context: ./application
      dockerfile: Dockerfile.dev
      args:
        - DOCKER_USER_UID=${DOCKER_USER_UID:-1000}
        - DOCKER_USER_GID=${DOCKER_USER_GID:-1000}
    command:
      [
        "uvicorn",
        "src.main:application",
        "--reload",
        "--host",
        "0.0.0.0",
        "--port",
        "8000"
      ]
    environment:
      - PYTHONPATH=/workspace/application
      - ENVIRONMENT
      - SECURITY_SECRET_KEY
      - SECURITY_ACCESS_TOKEN_EXPIRE_SECONDS
      - POSTGRES_HOST
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    working_dir: /workspace/application
    volumes:
      - .:/workspace:rw
    networks:
      - todo_network
    ports:
      - "8000:8000"
    restart: always
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:8000/ping || exit 1"
        ]
      interval: 5s
      timeout: 5s
      retries: 10
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15.2-alpine
    container_name: todo_postgres
    command:
      [
        "postgres",
        "-c",
        "timezone=UTC",
        "-c",
        "shared_buffers=2GB",
        "-c",
        "work_mem=16GB",
        # rough estimate of the number of how much memory is available
      # for disk caching by the OS
        "-c",
        "effective_cache_size=4GB"
      ]
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - todo_postgres_volume:/var/lib/postgresql/data:rw
    networks:
      - todo_network
    ports:
      - "5555:5432"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 10

  postgres_test:
    image: postgres:15.2-alpine
    container_name: todo_postgres_test
    environment:
      - POSTGRES_DB=test_database
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test_password
    networks:
      - todo_network
    ports:
      - "5556:5432"

networks:
  todo_network:
    name: todo_network
    driver: bridge

volumes:
  todo_postgres_volume:
    name: todo_postgres_volume
    driver: local
